<html>
 <head></head>
 <body>
  <ul>
   <li>What is Redis?</li>
   <li>Redis is an open-source, advance key value data store and cache. It is also referred as a data structure server which keys not only contains strings, but also hashes, sets, lists, and sorted sets.</li>
   <li>&nbsp;</li>
   <li>What is the meaning of Redis?</li>
   <li>Redis stands for remote Dictionary Server.</li>
   <li>&nbsp;</li>
   <li>How is Redis different from other databases?</li>
   <li>Redis is a NoSQL, Open source, in-memory data-structure store. It follows the principle of key-value store.</li>
   <li>&nbsp;It is extremely fast, persistent, portable and supports many languages such as C, C++, C#, Clojure, Common Lisp, D, Dart, Erlang, Go, Haskell, Haxe, Io, Java, JavaScript (Node.js), Julia, Lua, Objective-C, Perl, PHP, Pure Data, Python, R, Racket, Ruby, Rust, Scala, Smalltalk and Tcl.</li>
   <li>&nbsp;</li>
   <li>In which language Redis is written?</li>
   <li>Redis is written in ANSI C and mostly used for cache solution and session management. It creates unique keys for store values.</li>
   <li>&nbsp;</li>
   <li>What is the usage of Redis?</li>
   <li>Redis is a special key-value store database that can function as a NoSQL database or as a memory-cache store to improve performance when serving data that is stored in system memory.</li>
   <li>&nbsp;</li>
   <li>How to interact with Redis?</li>
   <li>After the installation of the server you can run the Redis Client provided by redis installation or you can open the command prompt and use the following command:</li>
   <li>redis-cli&nbsp;&nbsp;</li>
   <li>By using any of them, you can interact with Redis.</li>
   <li>&nbsp;</li>
   <li>Which are the most popular companies using Redis?</li>
   <li>Twitter, GitHub, Stack overflow etc. are the most popular companies using Redis.</li>
   <li>&nbsp;</li>
   <li>&nbsp;</li>
   <li>What are the main features of Redis?</li>
   <li>Following are the main features of Redis:</li>
   <li>&nbsp;</li>
   <li>Redis is very simple to install setup and manage.</li>
   <li>Redis is very fast. It can execute 100000 queries per second.</li>
   <li>Redis is fast because data is being persistent in memory as well as stored on the disk.</li>
   <li>Redis is very fast because it loads the whole dataset in primary memory.</li>
   <li>Redis operations working on different data types are atomic so these operations can be accomplished safely i.e. to set or increase a key, add or remove elements from a set or increase a counter.</li>
   <li>It supports various types of data structure such as strings, hashes, sets, lists, sorted sets etc.</li>
   <li>Redis supports a variety of languages i.e. C, C++, C#, Ruby, Python, Twisted Python, PHP, Erlang, Tcl, Perl, Lua, Java, Scala etc.</li>
   <li>If your favourite language is not supported yet, you can write your own client library, as the Protocol is pretty simple.</li>
   <li>Redis supports simple master to slave replication.</li>
   <li>Redis is portable.</li>
   <li>&nbsp;</li>
   <li>&nbsp;</li>
   <li>&nbsp;</li>
   <li>Explain the Replication Features of Redis?</li>
   <li>Replication is important in order to archive high level of availability in big data systems. The data needs to be replicated at n number of places. This follows the master-slave approach where the master copy is maintained by master-slave and replicated to n other nodes.</li>
   <li>&nbsp;</li>
   <li>What are the advantages of using Redis?</li>
   <li>Following is a list of some important advantages of Redis:</li>
   <li>Redis is very fast.</li>
   <li>It supports a server-side locking.</li>
   <li>It has a rich client side library.</li>
   <li>It is a good counter.</li>
   <li>It supports Atomic Operation.</li>
   <li>&nbsp;</li>
   <li>What are the disadvantages/limitations of using Redis?</li>
   <li>Following are the disadvantages/ limitations of Redis:</li>
   <li>It is single threaded.</li>
   <li>It has got limited client support for consistent hashing.</li>
   <li>It has significant overhead for persistence.</li>
   <li>It is not deployed widely.</li>
   <li>&nbsp;</li>
   <li>What is the difference between Redis and RDBMS?</li>
   <li>There are a lot of differences between Redis and RDBMS:</li>
   <li>Redis is a NoSQL database while RDBMS is an SQL database.</li>
   <li>Redis follows the key-value structure while RDBMS follows the table structure.</li>
   <li>Redis extremely fast while RDBMS is comparatively slow.</li>
   <li>Redis stores all the dataset in primary memory while RDBMS stores its dataset in secondary memory.</li>
   <li>Redis is generally used to store small and frequently used files while RDBMS is used to store big files.</li>
   <li>Redis provides only official support for Linux, BSD, Mac OS X, Solaris. It doesn't provide official support for Windows currently while RDBMS provides support for both.</li>
   <li>&nbsp;</li>
   <li>Differentiate Memcached and Redis?</li>
   <li>
    <table border="1" cellpadding="0" cellspacing="0" valign="top" style="direction: ltr; border-style: solid; border-color: rgb(163, 163, 163); border-width: 1pt;">
     <tbody>
      <tr>
       <td>Memcached</td>
       <td>Redis</td>
      </tr>
      <tr>
       <td>Memcached only does caching information.</td>
       <td>It provides some more functionalities like replication and persistence along with caching information.</td>
      </tr>
      <tr>
       <td>Memcached supports the functionality of LRU (Least Recently Used) eviction of values.</td>
       <td>LRU is not supported by Redis.</td>
      </tr>
      <tr>
       <td>In Memcached, when they overflow memory, the one you have not used recently (LRU- Least Recently Used) will get deleted.</td>
       <td>In Redis, there is a time set for each function, Three keys are maintained, the one, which is closest to expiry, will get deleted.</td>
      </tr>
      <tr>
       <td>CAS (Check and Set) is supported by Memcached.</td>
       <td>CAS is not supported by Redis.</td>
      </tr>
      <tr>
       <td>Array objects are needed to be serialized in order to get saved. We need to unsterilized them for their retrieval.</td>
       <td>Redis has got stronger data structures; it can handle strings, binary safe strings, list of binary safe strings, sorted lists, etc.</td>
      </tr>
      <tr>
       <td>Memcached has at most 250 bytes length.</td>
       <td>Redis has at most 2 GB key length.</td>
      </tr>
      <tr>
       <td>It is Multi-threaded</td>
       <td>It is single threaded.</td>
      </tr>
     </tbody>
    </table></li>
   <li>&nbsp;</li>
   <li>&nbsp;</li>
   <li>Mention Operation Keys of Redis.</li>
   <li>TYPE key</li>
   <li>TTL key</li>
   <li>EXPIRE key seconds</li>
   <li>EXPIREAT key timestamp</li>
   <li>EXISTS key</li>
   <li>DEL key</li>
   <li>&nbsp;</li>
   <li>Which are the different data types used in Redis?</li>
   <li>There are mainly 5 types of data types supported by Redis:</li>
   <li>Strings</li>
   <li>Hashes</li>
   <li>Lists</li>
   <li>Sets</li>
   <li>Sorted Sets</li>
   <li>&nbsp;</li>
   <li>We all know that Reds is fast, but is it also durable?</li>
   <li>In Redis, there is always a trade-of between durability and speed. In the case of system failure, it may lose data which is not stored.</li>
   <li>&nbsp;</li>
   <li>How can you enhance the durability of Redis?</li>
   <li>Whenever a new command is added to the append log file, call Fsysnc() each time.</li>
   <li>Keep calling Fsysnc() in every second. Despite of the 1 second data lose in the case of system fails.</li>
   <li>&nbsp;</li>
   <li>What are the concerned things while using Redis?</li>
   <li>Consistent method selection in order to name and prefix the keys. Namespace management.</li>
   <li>Make key prefixes registry which can map every documents to their owner applications.</li>
   <li>Designing, implementing and testing the Garbage collection mechanism for each class we keep into the redis architecture.</li>
   <li>Maintain a sharding library before investing so much into the application.</li>
   <li>&nbsp;</li>
   <li>How can you use Redis with .Net application?</li>
   <li>To use Redis in .Net applications, follow these steps:</li>
   <li>First, Download Redis Server.</li>
   <li>Install Redis Server.</li>
   <li>Download Redis Client.</li>
   <li>Set Configuration into Web.config File.</li>
   <li>Use Redis Client Class.</li>
  </ul> 
 </body>
</html>